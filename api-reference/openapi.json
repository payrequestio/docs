{
  "openapi": "3.0.1",
  "info": {
    "title": "PayRequest API",
    "description": "The PayRequest API allows you to create payment requests, manage transactions, and integrate payment functionality into your applications.",
    "version": "1.0.0",
    "contact": {
      "name": "PayRequest Support",
      "email": "support@payrequest.io",
      "url": "https://payrequest.io"
    },
    "license": {
      "name": "MIT"
    }
  },
  "servers": [
    {
      "url": "https://api.payrequest.io/v1",
      "description": "Production server"
    },
    {
      "url": "https://api.sandbox.payrequest.io/v1",
      "description": "Sandbox server"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/payments": {
      "get": {
        "summary": "List payments",
        "description": "Retrieve a list of payment requests",
        "tags": ["Payments"],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return (max 100)",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 10
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Number of results to skip",
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Filter by payment status",
            "schema": {
              "type": "string",
              "enum": ["pending", "completed", "failed", "cancelled"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of payments",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Payment"
                      }
                    },
                    "pagination": {
                      "$ref": "#/components/schemas/Pagination"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      },
      "post": {
        "summary": "Create payment",
        "description": "Create a new payment request",
        "tags": ["Payments"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePaymentRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Payment created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Payment"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      }
    },
    "/payments/{id}": {
      "get": {
        "summary": "Get payment",
        "description": "Retrieve a specific payment by ID",
        "tags": ["Payments"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Payment ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Payment details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Payment"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      },
      "patch": {
        "summary": "Update payment",
        "description": "Update a payment request",
        "tags": ["Payments"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Payment ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePaymentRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Payment updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Payment"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      },
      "delete": {
        "summary": "Cancel payment",
        "description": "Cancel a pending payment request",
        "tags": ["Payments"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Payment ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Payment cancelled successfully"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      }
    },
    "/customers": {
      "get": {
        "summary": "List customers",
        "description": "Retrieve a list of customers",
        "tags": ["Customers"],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return (max 100)",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 10
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Number of results to skip",
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of customers",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Customer"
                      }
                    },
                    "pagination": {
                      "$ref": "#/components/schemas/Pagination"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      },
      "post": {
        "summary": "Create customer",
        "description": "Create a new customer",
        "tags": ["Customers"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCustomerRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Customer created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Customer"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      }
    },
    "/webhooks": {
      "get": {
        "summary": "List webhooks",
        "description": "Retrieve a list of webhook endpoints",
        "tags": ["Webhooks"],
        "responses": {
          "200": {
            "description": "List of webhooks",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Webhook"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      },
      "post": {
        "summary": "Create webhook",
        "description": "Create a new webhook endpoint",
        "tags": ["Webhooks"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateWebhookRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Webhook created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Webhook"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "description": "Enter your API key as the bearer token"
      }
    },
    "schemas": {
      "Payment": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique payment identifier",
            "example": "pay_1234567890"
          },
          "amount": {
            "type": "integer",
            "description": "Payment amount in cents",
            "example": 2500
          },
          "currency": {
            "type": "string",
            "description": "Payment currency (ISO 4217)",
            "example": "USD"
          },
          "description": {
            "type": "string",
            "description": "Payment description",
            "example": "Product purchase"
          },
          "status": {
            "type": "string",
            "enum": ["pending", "completed", "failed", "cancelled"],
            "description": "Payment status"
          },
          "payment_url": {
            "type": "string",
            "description": "URL for customer to complete payment",
            "example": "https://payrequest.io/p/pay_1234567890"
          },
          "recipient": {
            "$ref": "#/components/schemas/Recipient"
          },
          "metadata": {
            "type": "object",
            "description": "Custom metadata"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Payment creation timestamp"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "Payment last update timestamp"
          }
        }
      },
      "CreatePaymentRequest": {
        "type": "object",
        "required": ["amount", "currency", "description"],
        "properties": {
          "amount": {
            "type": "integer",
            "description": "Payment amount in cents",
            "minimum": 50,
            "example": 2500
          },
          "currency": {
            "type": "string",
            "description": "Payment currency (ISO 4217)",
            "example": "USD"
          },
          "description": {
            "type": "string",
            "description": "Payment description",
            "maxLength": 255,
            "example": "Product purchase"
          },
          "recipient": {
            "$ref": "#/components/schemas/Recipient"
          },
          "callback_url": {
            "type": "string",
            "format": "uri",
            "description": "Webhook URL for payment updates"
          },
          "redirect_url": {
            "type": "string",
            "format": "uri",
            "description": "URL to redirect after payment"
          },
          "expires_at": {
            "type": "string",
            "format": "date-time",
            "description": "Payment expiration time"
          },
          "metadata": {
            "type": "object",
            "description": "Custom metadata"
          }
        }
      },
      "UpdatePaymentRequest": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "Payment description",
            "maxLength": 255
          },
          "metadata": {
            "type": "object",
            "description": "Custom metadata"
          }
        }
      },
      "Recipient": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "description": "Recipient email address",
            "example": "customer@example.com"
          },
          "name": {
            "type": "string",
            "description": "Recipient name",
            "example": "John Doe"
          },
          "phone": {
            "type": "string",
            "description": "Recipient phone number",
            "example": "+1234567890"
          }
        }
      },
      "Customer": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique customer identifier",
            "example": "cust_1234567890"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "Customer email address"
          },
          "name": {
            "type": "string",
            "description": "Customer name"
          },
          "phone": {
            "type": "string",
            "description": "Customer phone number"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Customer creation timestamp"
          }
        }
      },
      "CreateCustomerRequest": {
        "type": "object",
        "required": ["email"],
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "description": "Customer email address"
          },
          "name": {
            "type": "string",
            "description": "Customer name"
          },
          "phone": {
            "type": "string",
            "description": "Customer phone number"
          }
        }
      },
      "Webhook": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique webhook identifier"
          },
          "url": {
            "type": "string",
            "format": "uri",
            "description": "Webhook endpoint URL"
          },
          "events": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Events to listen for"
          },
          "active": {
            "type": "boolean",
            "description": "Whether webhook is active"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Webhook creation timestamp"
          }
        }
      },
      "CreateWebhookRequest": {
        "type": "object",
        "required": ["url", "events"],
        "properties": {
          "url": {
            "type": "string",
            "format": "uri",
            "description": "Webhook endpoint URL"
          },
          "events": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": ["payment.created", "payment.completed", "payment.failed", "payment.cancelled"]
            },
            "description": "Events to listen for"
          }
        }
      },
      "Pagination": {
        "type": "object",
        "properties": {
          "total": {
            "type": "integer",
            "description": "Total number of items"
          },
          "limit": {
            "type": "integer",
            "description": "Number of items per page"
          },
          "offset": {
            "type": "integer",
            "description": "Number of items skipped"
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "error": {
            "type": "object",
            "properties": {
              "code": {
                "type": "string",
                "description": "Error code"
              },
              "message": {
                "type": "string",
                "description": "Error message"
              }
            }
          }
        }
      }
    },
    "responses": {
      "BadRequest": {
        "description": "Bad request",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "Unauthorized": {
        "description": "Unauthorized",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "NotFound": {
        "description": "Not found",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      }
    }
  }
}